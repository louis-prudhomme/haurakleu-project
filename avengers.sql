DROP TRIGGER insert_report_analysis;
DROP TRIGGER insert_audit_keyword;
DROP TRIGGER deadline_validation;
DROP TRIGGER report_validation;
DROP TRIGGER check_hired_date;

DROP PROCEDURE delete_intermediary_reports;
DROP PROCEDURE doc_download;
DROP PROCEDURE doc_consult;
DROP PROCEDURE doc_copy;
DROP PROCEDURE doc_print;

DROP FUNCTION is_allowed;
DROP FUNCTION get_report_by_keyword;
DROP FUNCTION get_most_wanted_reports;

DROP TABLE audit_keyword;
DROP TABLE audit_report;
DROP TABLE has;
DROP TABLE keyword;
DROP TABLE report;
DROP TABLE performs;
DROP TABLE student;
DROP TABLE major;
DROP TABLE teaches;
DROP TABLE teacher;
DROP TABLE company_tutor;
DROP TABLE study_level;
DROP TABLE teaching_field;
DROP TABLE conf_level;
DROP TABLE company;
DROP TABLE instructions;
DROP TABLE user_t;

CREATE TABLE user_t
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,first_name VARCHAR2(64)
,last_name VARCHAR2(64)
,avatar_path VARCHAR2(256)
,phone_number CHAR(10)
,email VARCHAR2(256)
,password VARCHAR(128)
,is_my_user INT DEFAULT 0 CHECK (is_my_user IN (0, 1))
,CONSTRAINT check_email 
    CHECK (email LIKE '%@%.%' 
    AND email NOT LIKE '@%'
    AND email NOT LIKE '%@%@%')
,CONSTRAINT check_phone_number
    CHECK (REGEXP_LIKE(phone_number, '^((\+)33|0)[1-9](\d{2}){4}$'))
,CONSTRAINT check_password_strength 
    CHECK(REGEXP_LIKE(password, '^.*[A-Z].*$')
    AND REGEXP_LIKE(password, '^.*[0-9].*$')
    AND REGEXP_LIKE(password, '^.*[^A-Z,0-9].*$')
    AND REGEXP_LIKE(password, '^.*[!@#$%^&*(),.?":{}|<>].*$')
    AND LENGTHB(password) >= 8)
);

CREATE TABLE instructions
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,guidelines VARCHAR2(512)
,deadline DATE
);

CREATE TABLE company
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,name VARCHAR2(64)
);

CREATE TABLE conf_level
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,label VARCHAR2(64)
);

CREATE TABLE teaching_field
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,label VARCHAR2(64)
);

CREATE TABLE study_level
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,label VARCHAR2(64)
);

CREATE TABLE company_tutor
(id INT NOT NULL PRIMARY KEY
,job VARCHAR2(64)
,CONSTRAINT inherit_user_tutor FOREIGN KEY (id)
	REFERENCES user_t (id)
);

CREATE TABLE teacher
(id INT NOT NULL PRIMARY KEY
,hired DATE
,CONSTRAINT inherit_user_teacher FOREIGN KEY (id)
	REFERENCES user_t (id)
);

CREATE TABLE teaches
(id_teacher INT NOT NULL
,id_field INT NOT NULL
,CONSTRAINT fk_teaches_teacher FOREIGN KEY (id_teacher)
	REFERENCES teacher (id)
,CONSTRAINT fk_teaches_field FOREIGN KEY (id_field)
	REFERENCES teaching_field (id)
,CONSTRAINT pk_teaches PRIMARY KEY (id_teacher, id_field)
);

CREATE TABLE major
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,label VARCHAR2(64)
,id_major_director INT NOT NULL
,CONSTRAINT fk_major_director FOREIGN KEY (id_major_director)
	REFERENCES teacher (id)
);

CREATE TABLE student
(id INT NOT NULL PRIMARY KEY
,promotion INT CHECK (promotion BETWEEN 1936 AND 2154)
,is_apprentice INT DEFAULT 0 CHECK (is_apprentice IN (0, 1))
,id_major INT NOT NULL
,id_study_level INT NOT NULL
,CONSTRAINT inherit_user_student FOREIGN KEY (id)
	REFERENCES user_t (id)
,CONSTRAINT fk_student_major FOREIGN KEY (id_major)
	REFERENCES major (id)
,CONSTRAINT fk_student_level FOREIGN KEY (id_study_level)
	REFERENCES study_level (id)
);

CREATE TABLE performs
(id_student INT NOT NULL
,id_instructions INT NOT NULL
,CONSTRAINT fk_performs_student FOREIGN KEY (id_student)
	REFERENCES student (id)
,CONSTRAINT fk_performs_instructions FOREIGN KEY (id_instructions)
	REFERENCES instructions (id)
,CONSTRAINT pk_performs PRIMARY KEY (id_student, id_instructions)
);

CREATE TABLE report
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,title VARCHAR2(64)
,submitted DATE DEFAULT SYSDATE
,is_pedag_vetted INT DEFAULT 0 CHECK (is_pedag_vetted IN (0, 1))
,is_company_vetted INT DEFAULT 0 CHECK (is_company_vetted IN (0, 1))
,id_student INT NOT NULL
,id_company INT NOT NULL
,id_pedag_tutor INT NOT NULL
,id_company_tutor INT NOT NULL
,id_conf_level INT NOT NULL
,id_instructions INT NOT NULL
,CONSTRAINT fk_report_student FOREIGN KEY (id_student)
	REFERENCES student (id)
,CONSTRAINT fk_report_company FOREIGN KEY (id_company)
	REFERENCES company (id)
,CONSTRAINT fk_report_teacher FOREIGN KEY (id_pedag_tutor)
	REFERENCES teacher (id)
,CONSTRAINT fk_report_comp_tutor FOREIGN KEY (id_company_tutor)
	REFERENCES company_tutor (id)
,CONSTRAINT fk_report_conf_level FOREIGN KEY (id_conf_level)
	REFERENCES conf_level (id)
,CONSTRAINT fk_report_instructions FOREIGN KEY (id_instructions)
	REFERENCES instructions (id)
);

CREATE TABLE keyword
(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY
,word VARCHAR2(32)
);

CREATE TABLE has
(id_report INT NOT NULL
,id_keyword INT NOT NULL
,CONSTRAINT fk_has_report FOREIGN KEY (id_report)
	REFERENCES report (id) ON DELETE CASCADE
,CONSTRAINT fk_has_keyword FOREIGN KEY (id_keyword)
	REFERENCES keyword (id)
,CONSTRAINT pk_has PRIMARY KEY (id_report, id_keyword)
);

CREATE TABLE audit_report
(id_report INT NOT NULL
,consults INT DEFAULT 0
,copies INT DEFAULT 0
,prints INT DEFAULT 0
,downloads INT DEFAULT 0
,CONSTRAINT fk_audit_report FOREIGN KEY (id_report)
	REFERENCES report (id) ON DELETE CASCADE
,CONSTRAINT pk_audit_report PRIMARY KEY (id_report)
);

CREATE TABLE audit_keyword
(id_keyword INT NOT NULL
,nb_research INT DEFAULT 0
,CONSTRAINT fk_audit_keyword FOREIGN KEY (id_keyword)
	REFERENCES keyword (id) ON DELETE CASCADE
,CONSTRAINT pk_audit_keyword PRIMARY KEY (id_keyword)
);

CREATE OR REPLACE FUNCTION is_allowed
(p_id_user NUMBER, p_id_report NUMBER, p_conf_level NUMBER)
RETURN NUMBER
AS
    return_val NUMBER;
BEGIN
    DECLARE
        chk_prms NUMBER;
        conf NUMBER;
        us_my NUMBER;
        state NUMBER;
        is_part NUMBER;

        no_record_found EXCEPTION;
        confidentiality_prohibits EXCEPTION;
        report_not_validated EXCEPTION;
        not_my_user EXCEPTION;
    BEGIN
        SELECT count(id)
            INTO chk_prms 
            FROM report
            WHERE id = p_id_report;
        SELECT count(id) + chk_prms
            INTO chk_prms 
            FROM user_t
            WHERE id = p_id_user;
        IF chk_prms <> 2 THEN
            RAISE no_record_found;
        END IF;

        SELECT id_conf_level
            INTO conf 
            FROM report
            WHERE id = p_id_report;

        IF conf > p_conf_level THEN
            RAISE confidentiality_prohibits;
        END IF;

        SELECT is_my_user 
            INTO us_my 
            FROM user_t 
            WHERE id = p_id_user;
        SELECT is_company_vetted + is_pedag_vetted
            INTO state
            FROM report 
            WHERE id = p_id_report;
        SELECT count(id) 
            INTO is_part 
            FROM report 
            WHERE id = p_id_report
                AND (id_student = p_id_user 
                OR id_pedag_tutor = p_id_user 
                OR id_company_tutor = p_id_user);
                
        IF state < 2 AND is_part < 1 THEN
            RAISE report_not_validated;
        ELSIF us_my = 0 AND is_part < 1 THEN
            RAISE not_my_user;
        ELSE
            return_val := 1;
        END IF;
    EXCEPTION
        WHEN no_record_found THEN
            RAISE_APPLICATION_ERROR(-20010, 'No matching records were found for either the provided report id or student id, or both.');
            RETURN -1;
        WHEN confidentiality_prohibits THEN
            RAISE_APPLICATION_ERROR(-20011, 'Confidentiality settings disable this action.');
            RETURN -1;
        WHEN report_not_validated THEN
            RAISE_APPLICATION_ERROR(-20012, 'The report has not been validated, action aborted.');
            RETURN -1;
        WHEN not_my_user THEN
            RAISE_APPLICATION_ERROR(-20013, 'User must be a user of My Efrei.');
            RETURN -1;
    END;

RETURN return_val;

END is_allowed;
/

CREATE OR REPLACE FUNCTION get_report_by_keyword
(p_keyword VARCHAR2)
RETURN SYS_REFCURSOR
AS
    PRAGMA AUTONOMOUS_TRANSACTION;
    report_keyword SYS_REFCURSOR;
    id_word INT;
    nb_audit INT;
BEGIN
    SELECT id 
        INTO id_word 
        FROM keyword 
        WHERE word = p_keyword;

    OPEN report_keyword FOR 
        SELECT r.id AS id, r.title AS title 
            FROM has h, report r 
            WHERE h.id_keyword = id_word 
            AND h.id_report = r.id 
            ORDER BY r.title;

    UPDATE audit_keyword 
        SET nb_research = nb_research + 1 
        WHERE id_keyword = id_word;
    COMMIT;
    RETURN report_keyword;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            RAISE_APPLICATION_ERROR(-20004, 'Keyword not found');
            RETURN NULL;  
END get_report_by_keyword;
/

CREATE OR REPLACE FUNCTION get_most_wanted_reports
(p_top NUMBER)
RETURN SYS_REFCURSOR
AS
    most_wanted_keyword SYS_REFCURSOR;
BEGIN
    OPEN most_wanted_keyword
        FOR SELECT * FROM (
                SELECT k.id AS id, k.word AS title, a.nb_research 
                    FROM keyword k, audit_keyword a 
                    WHERE k.id = a.id_keyword 
                    ORDER BY a.nb_research DESC)
            WHERE ROWNUM <= p_top;     
    RETURN most_wanted_keyword;
END get_most_wanted_reports;
/

CREATE OR REPLACE PROCEDURE doc_print
(p_id_user NUMBER, p_id_report NUMBER)
AS
    PRAGMA AUTONOMOUS_TRANSACTION;
    result NUMBER;
BEGIN
    result := is_allowed(p_id_user, p_id_report, 1);
    IF result = 1 THEN
        UPDATE audit_report
            SET prints = prints + 1 
            WHERE id_report = p_id_report;
        COMMIT;
    END IF;
END;
/

CREATE OR REPLACE PROCEDURE doc_copy
(p_id_user NUMBER, p_id_report NUMBER)
AS
    PRAGMA AUTONOMOUS_TRANSACTION;
    result NUMBER;
BEGIN
    result := is_allowed(p_id_user, p_id_report, 1);
    IF result = 1 THEN
        UPDATE audit_report
            SET copies = copies + 1 
            WHERE id_report = p_id_report;
        COMMIT;
    END IF;
END;
/

CREATE OR REPLACE PROCEDURE doc_download
(p_id_user NUMBER, p_id_report NUMBER)
AS
    PRAGMA AUTONOMOUS_TRANSACTION;
    result NUMBER;
BEGIN
    result := is_allowed(p_id_user, p_id_report, 1);
    IF result = 1 THEN
        UPDATE audit_report 
            SET downloads = downloads + 1 
            WHERE id_report = p_id_report;
        COMMIT;
    END IF;
END;
/

CREATE OR REPLACE PROCEDURE doc_consult
(p_id_user NUMBER, p_id_report NUMBER)
AS
    PRAGMA AUTONOMOUS_TRANSACTION;
    result NUMBER;
BEGIN
    result := is_allowed(p_id_user, p_id_report, 2);
    IF result = 1 THEN
        UPDATE audit_report 
            SET consults = consults + 1 
            WHERE id_report = p_id_report;
        COMMIT;
    END IF;
END;
/

CREATE OR REPLACE PROCEDURE delete_intermediary_reports
(p_id_report NUMBER, p_submitted DATE, p_id_student NUMBER, p_id_instructions NUMBER)
AS
    PRAGMA AUTONOMOUS_TRANSACTION;
    subm DATE;
    stud NUMBER;
    inst NUMBER;
BEGIN
    DELETE FROM report
        WHERE id <> p_id_report
        AND submitted <= p_submitted
        AND id_student = p_id_student
        AND id_instructions = p_id_instructions;
    COMMIT;
END;
/

CREATE OR REPLACE TRIGGER report_validation
AFTER update OR insert
ON report
FOR EACH ROW
WHEN (new.is_company_vetted = 1 AND new.is_pedag_vetted = 1)
DECLARE
    keyword_count NUMBER;
    not_enough_keywords EXCEPTION;
BEGIN
    SELECT count(id_keyword) INTO keyword_count FROM has WHERE id_report = :NEW.id;
    IF keyword_count < 1 THEN
        RAISE not_enough_keywords;
    END IF;
    delete_intermediary_reports(:new.id, :new.submitted, :new.id_student, :new.id_instructions);
EXCEPTION
    WHEN not_enough_keywords THEN
        RAISE_APPLICATION_ERROR(-20005, 'Expected at least one keyword for this report.');
END;
/

CREATE OR REPLACE TRIGGER check_hired_date
BEFORE INSERT OR UPDATE ON TEACHER
FOR EACH ROW
DECLARE
    HIRED_DATE_EXCEPTION EXCEPTION;
BEGIN
    IF :NEW.HIRED > SYSDATE THEN 
        RAISE HIRED_DATE_EXCEPTION;
    END IF;
   
EXCEPTION
    WHEN HIRED_DATE_EXCEPTION THEN 
        RAISE_APPLICATION_ERROR(-20003, 'The hired date can not be in the future.');
END;
/

CREATE OR REPLACE TRIGGER deadline_validation
BEFORE INSERT OR UPDATE OF submitted ON report
FOR EACH ROW
DECLARE 
    DEADLINE_EXCEPTION EXCEPTION;
    DEADLINE_REPORT DATE;
BEGIN
    SELECT DEADLINE INTO DEADLINE_REPORT FROM INSTRUCTIONS WHERE INSTRUCTIONS.ID = :NEW.ID_INSTRUCTIONS;
    
    IF :NEW.SUBMITTED > DEADLINE_REPORT THEN 
        RAISE DEADLINE_EXCEPTION;
    END IF;

EXCEPTION
    WHEN DEADLINE_EXCEPTION THEN 
        RAISE_APPLICATION_ERROR(-20002, 'The report is late, the deadline is over.');
END;
/

CREATE OR REPLACE TRIGGER insert_audit_report
AFTER INSERT ON report
FOR EACH ROW
BEGIN
    INSERT INTO report_analysis (id_report) 
        VALUES (:new.id);
END;
/

CREATE OR REPLACE TRIGGER insert_audit_keyword
AFTER INSERT ON keyword
FOR EACH ROW
BEGIN
    INSERT INTO audit_keyword (id_keyword) 
        VALUES (:new.id);
END;
/

ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MM-YYYY';

INSERT INTO instructions (guidelines, deadline) VALUES ('Write down a report of your internship', '26-03-2021');
INSERT INTO instructions (guidelines, deadline) VALUES ('Write down a report of your apprenticeship', '02-12-2021');
INSERT INTO instructions (guidelines, deadline) VALUES ('Write down a report of your internship ; it must be fourteen pages long', '26-01-2021');

INSERT INTO company (name) VALUES ('MyCrauSauft');
INSERT INTO company (name) VALUES ('Haurakleu');
INSERT INTO company (name) VALUES ('Hapel');
INSERT INTO company (name) VALUES ('Gougueule');
INSERT INTO company (name) VALUES ('Hamhasaune');
INSERT INTO company (name) VALUES ('LHVM');
INSERT INTO company (name) VALUES ('L''Aureal Madryd');
INSERT INTO company (name) VALUES ('Safoni');
INSERT INTO company (name) VALUES ('Leonard');
INSERT INTO company (name) VALUES ('OXO');
INSERT INTO company (name) VALUES ('BPN Marseillebas');
INSERT INTO company (name) VALUES ('Bleu Telecom');
INSERT INTO company (name) VALUES ('Vivendive');
INSERT INTO company (name) VALUES ('Societe globale');
INSERT INTO company (name) VALUES ('Mcheline');
INSERT INTO company (name) VALUES ('Pythagore');
INSERT INTO company (name) VALUES ('Curcumain');
INSERT INTO company (name) VALUES ('Credit naval');
INSERT INTO company (name) VALUES ('Lepetit');
INSERT INTO company (name) VALUES ('Ricard');

INSERT INTO conf_level (label) VALUES ('Normal');
INSERT INTO conf_level (label) VALUES ('Low level');
INSERT INTO conf_level (label) VALUES ('High level');

INSERT INTO teaching_field (label) VALUES ('Object-Oriented Programming');
INSERT INTO teaching_field (label) VALUES ('Database Administration');
INSERT INTO teaching_field (label) VALUES ('Java Enterprise Edition');
INSERT INTO teaching_field (label) VALUES ('XML');
INSERT INTO teaching_field (label) VALUES ('Frontend');
INSERT INTO teaching_field (label) VALUES ('Machine Learning');
INSERT INTO teaching_field (label) VALUES ('English');
INSERT INTO teaching_field (label) VALUES ('Mobile developement');
INSERT INTO teaching_field (label) VALUES ('Bioengineering');
INSERT INTO teaching_field (label) VALUES ('Business plan');
INSERT INTO teaching_field (label) VALUES ('Project management');
INSERT INTO teaching_field (label) VALUES ('C#');
INSERT INTO teaching_field (label) VALUES ('.NET Core');
INSERT INTO teaching_field (label) VALUES ('DevOps');
INSERT INTO teaching_field (label) VALUES ('Reali-time systems');
INSERT INTO teaching_field (label) VALUES ('Advanced Object-Oriented Programming');
INSERT INTO teaching_field (label) VALUES ('Advanced Database Administration');
INSERT INTO teaching_field (label) VALUES ('Advanced Java Enterprise Edition');
INSERT INTO teaching_field (label) VALUES ('Advanced XML');
INSERT INTO teaching_field (label) VALUES ('Advanced Frontend');
INSERT INTO teaching_field (label) VALUES ('Advanced Machine Learning');
INSERT INTO teaching_field (label) VALUES ('Advanced English');
INSERT INTO teaching_field (label) VALUES ('Advanced Mobile developement');
INSERT INTO teaching_field (label) VALUES ('Advanced Bioengineering');
INSERT INTO teaching_field (label) VALUES ('Advanced Business plan');
INSERT INTO teaching_field (label) VALUES ('Advanced Project management');
INSERT INTO teaching_field (label) VALUES ('Advanced C#');
INSERT INTO teaching_field (label) VALUES ('Advanced .NET Core');
INSERT INTO teaching_field (label) VALUES ('Advanced DevOps');
INSERT INTO teaching_field (label) VALUES ('Advanced Reali-time systems');

INSERT INTO study_level (label) VALUES ('L1');
INSERT INTO study_level (label) VALUES ('L2');
INSERT INTO study_level (label) VALUES ('L3');
INSERT INTO study_level (label) VALUES ('M1');
INSERT INTO study_level (label) VALUES ('M2');

INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Slayer', 'Doom', '666:/chainsaw.jpg', '0666136660', 'doomslayer@rip.tear', 'AA!45aaass', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('John', 'Carmack', '/home/carmack/pictures/armadillo.png', '0498684962', 'johnc@idsoftware.com', 'f1aA6aa@', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Christian', 'Nguyen', 'http://gil.cc/esazew', '0691784249', 'es@ze.sk', 'aTiew9us@k', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Earl', 'Webster', 'http://gi.dm/fucwuula', '0818702908', 'rugo@fotabe.tw', 'loNNod0uk##', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Lydia', 'Park', 'http://duzin.gl/ho', '0486447349', 'izsafis@peopcoh.io', 'hoaAAho9nu@', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Alma', 'Hunter', 'http://web.pe/gedub', '0547197958', 'ej@la.bw', 'rol2otD#ef', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Clara', 'Paul', 'http://ogodmu.mv/vegarol', '0809984108', 'ti@nuh.za', 'vawe#3Dhne', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Henrietta', 'Underwood', 'http://bewhuk.us/hede', '0767025947', 'aphom@tajhuczi.bm', 'ali4F^ijim', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Genevieve', 'Caldwell', 'http://zefokrad.us/era', '0554030398', 'lopro@devet.hn', 'tab3Fe@jne', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Victoria', 'Fernandez', 'http://nuk.hr/jefwu', '0428439760', 'da@ode.ao', 'rohu4@hFum', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Gerald', 'Holland', 'http://juwol.nu/dohujav', '0172835010', 'koligmev@tin.lc', 'aplR5#ukun', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Mike', 'Morgan', 'http://ototol.ph/fa', '0230902204', 'sum@mewkosot.ke', 'ejb@o4piRv', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Anthony', 'Wells', 'http://gidahe.cm/cosvus', '0167152627', 'rifechu@ho.as', 'ja@l3Fdigu', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Olivia', 'Douglas', 'http://kikuwzo.al/vi', '0974071000', 'fu@polosip.tr', 'vo66i@Stirn', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Theresa', 'Tucker', 'http://petbe.ye/he', '0438562511', 'uloabi@ip.tn', 'idip5iD@sa', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Johanna', 'Rodriguez', 'http://burhu.fi/zad', '0562144554', 'umuuwic@mah.de', 'zasF4a^laj', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Elmer', 'Taylor', 'http://cusgaje.lc/oljo', '0191617302', 'cevop@kohlegci.rs', 'ij5G5*uselu', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Clara', 'Meyer', 'http://el.qa/bagjohzuc', '0560565572', 'gapaw@ji.zw', 'g4uaDj@aib', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Leo', 'Maxwell', 'http://zonnokbam.cr/weowu', '0319647451', 'rema@cum.qa', 'av3Sej#ino', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Bill', 'Silva', 'http://vigoj.to/jezurfu', '0465975796', 'ona@ru.je', 'nicz6#Figo', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Jessie', 'Barton', 'http://bopa.tm/gaw', '0959393230', 'wajez@zi.ss', 'uhivu3@Ctz', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Emma', 'Walsh', 'http://niabe.zw/wassem', '0145116566', 'kihavuca@vosrur.tp', 'kirSr@6ebm', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Dennis', 'Pena', 'http://izaru.kw/jinis', '0806976245', 'kip@cufihuw.md', 'julu@h3Fba', 0);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Lillian', 'Martin', 'http://seluop.am/biwi', '0271019140', 'niwge@hemuwil.io', 'si4V@likel', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Franklin', 'Fields', 'http://boti.pg/hakkago', '0265799381', 'lub@nek.ge', 'mofac5@Dok', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Willie', 'Stewart', 'http://bud.az/pebo', '0585979273', 'uswespic@piule.vc', 'li6n@Xiasn', 1);
INSERT INTO user_t (first_name, last_name, avatar_path, phone_number, email, password, is_my_user) VALUES ('Flora', 'Norris', 'http://savi.gb/poimo', '0824489470', 'kenevezi@jidcez.et', 'he4@3Cdawre', 0);
	
INSERT INTO company_tutor (id, job) VALUES (1, 'Developer');
INSERT INTO company_tutor (id, job) VALUES (2, 'Project manager');
INSERT INTO company_tutor (id, job) VALUES (3, 'HR');
INSERT INTO company_tutor (id, job) VALUES (4, 'Ingeneer');
INSERT INTO company_tutor (id, job) VALUES (5, 'Developer');
INSERT INTO company_tutor (id, job) VALUES (6, 'Lead developer');

INSERT INTO teacher (id, hired) VALUES (7, '23-04-2008');
INSERT INTO teacher (id, hired) VALUES (8, '25-09-2008');
INSERT INTO teacher (id, hired) VALUES (9, '19-08-2011');
INSERT INTO teacher (id, hired) VALUES (10, '28-09-2013');
INSERT INTO teacher (id, hired) VALUES (11, '10-05-2015');
INSERT INTO teacher (id, hired) VALUES (12, '17-12-2016');
INSERT INTO teacher (id, hired) VALUES (13, '22-10-2018');

INSERT INTO teaches (id_teacher, id_field) VALUES (9, 16);
INSERT INTO teaches (id_teacher, id_field) VALUES (11, 17);
INSERT INTO teaches (id_teacher, id_field) VALUES (12, 15);
INSERT INTO teaches (id_teacher, id_field) VALUES (12, 7);
INSERT INTO teaches (id_teacher, id_field) VALUES (11, 18);
INSERT INTO teaches (id_teacher, id_field) VALUES (12, 10);
INSERT INTO teaches (id_teacher, id_field) VALUES (8, 7);
INSERT INTO teaches (id_teacher, id_field) VALUES (9, 9);
INSERT INTO teaches (id_teacher, id_field) VALUES (12, 11);
INSERT INTO teaches (id_teacher, id_field) VALUES (10, 9);
INSERT INTO teaches (id_teacher, id_field) VALUES (11, 14);
INSERT INTO teaches (id_teacher, id_field) VALUES (8, 4);
INSERT INTO teaches (id_teacher, id_field) VALUES (11, 3);
INSERT INTO teaches (id_teacher, id_field) VALUES (11, 2);
INSERT INTO teaches (id_teacher, id_field) VALUES (10, 4);
INSERT INTO teaches (id_teacher, id_field) VALUES (9, 3);
INSERT INTO teaches (id_teacher, id_field) VALUES (12, 12);
INSERT INTO teaches (id_teacher, id_field) VALUES (7, 19);
INSERT INTO teaches (id_teacher, id_field) VALUES (11, 4);
INSERT INTO teaches (id_teacher, id_field) VALUES (8, 18);
INSERT INTO teaches (id_teacher, id_field) VALUES (8, 3);
INSERT INTO teaches (id_teacher, id_field) VALUES (8, 15);
INSERT INTO teaches (id_teacher, id_field) VALUES (11, 9);
INSERT INTO teaches (id_teacher, id_field) VALUES (12, 6);

INSERT INTO major (label, id_major_director) VALUES ('Software engineering', 10);
INSERT INTO major (label, id_major_director) VALUES ('Business intelligence', 8);
INSERT INTO major (label, id_major_director) VALUES ('Solar panels', 7);
INSERT INTO major (label, id_major_director) VALUES ('Drones', 12);
INSERT INTO major (label, id_major_director) VALUES ('Droids', 12);
INSERT INTO major (label, id_major_director) VALUES ('Robots', 12);
INSERT INTO major (label, id_major_director) VALUES ('Databases', 10 );
INSERT INTO major (label, id_major_director) VALUES ('Artificial Intelligence', 8);
INSERT INTO major (label, id_major_director) VALUES ('Bioengineering', 9);
INSERT INTO major (label, id_major_director) VALUES ('New energies', 12);
INSERT INTO major (label, id_major_director) VALUES ('Finger', 11);

INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (14, 2001, 0, 3, 4);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (15, 2015, 0, 8, 2);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (16, 1997, 1, 7, 2);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (17, 2013, 0, 7, 1);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (18, 2013, 1, 2, 2);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (19, 1986, 1, 3, 2);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (20, 1980, 0, 8, 2);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (21, 2015, 1, 6, 1);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (22, 1988, 1, 6, 4);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (23, 1981, 1, 8, 3);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (24, 1983, 0, 7, 2);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (25, 1974, 1, 8, 3);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (26, 1987, 1, 5, 1);
INSERT INTO student (id, promotion, is_apprentice, id_major, id_study_level) VALUES (27, 1986, 1, 4, 1);

INSERT INTO performs (id_student, id_instructions) VALUES (22, 3);
INSERT INTO performs (id_student, id_instructions) VALUES (24, 3);
INSERT INTO performs (id_student, id_instructions) VALUES (26, 3);
INSERT INTO performs (id_student, id_instructions) VALUES (26, 1);
INSERT INTO performs (id_student, id_instructions) VALUES (18, 1);
INSERT INTO performs (id_student, id_instructions) VALUES (26, 2);
INSERT INTO performs (id_student, id_instructions) VALUES (19, 3);
INSERT INTO performs (id_student, id_instructions) VALUES (21, 2);
INSERT INTO performs (id_student, id_instructions) VALUES (23, 1);
INSERT INTO performs (id_student, id_instructions) VALUES (15, 1);
INSERT INTO performs (id_student, id_instructions) VALUES (18, 2);
INSERT INTO performs (id_student, id_instructions) VALUES (24, 2);
INSERT INTO performs (id_student, id_instructions) VALUES (25, 1);
INSERT INTO performs (id_student, id_instructions) VALUES (21, 3);
INSERT INTO performs (id_student, id_instructions) VALUES (27, 2);
INSERT INTO performs (id_student, id_instructions) VALUES (27, 1);

INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1554 Ulakeg View', 0, 0, 20, 9, 11, 3, 1, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1609 Gawi Key', 0, 1, 27, 2, 7, 3, 2, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1155 Lomji Ridge', 0, 1, 22, 17, 11, 3, 2, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1669 Reoho Place', 0, 0, 16, 14, 10, 2, 1, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1558 Momrom Glen', 0, 1, 19, 2, 9, 1, 2, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('315 Fafa River', 0, 0, 15, 9, 8, 5, 2, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('834 Defo Extension', 0, 1, 21, 10, 8, 1, 2, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1473 Hatoh Path', 1, 0, 19, 9, 7, 5, 3, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('952 Hejtut View', 0, 1, 22, 9, 11, 3, 3, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1505 Niswu Glen', 0, 1, 22, 15, 10, 1, 2, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('149 Jakuj Manor', 0, 1, 17, 11, 10, 3, 1, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1592 Gelsav Manor', 1, 0, 20, 12, 10, 2, 1, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('419 Adpic Glen', 1, 0, 27, 6, 9, 1, 3, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1580 Otaaza Extension', 0, 1, 15, 7, 13, 3, 2, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1065 Lohat Drive', 0, 1, 24, 4, 12, 4, 1, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1853 Obza Parkway', 0, 1, 17, 13, 8, 2, 3, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('220 Siit Glen', 0, 1, 17, 10, 12, 2, 3, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1409 Fosbe Park', 0, 0, 15, 2, 13, 3, 2, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('196 Lejzu Place', 0, 1, 17, 10, 13, 2, 1, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1143 Tazsu Grove', 1, 0, 24, 4, 9, 2, 2, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1737 Jopic Lane', 0, 1, 16, 17, 11, 5, 1, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('350 Gimufi View', 1, 0, 26, 14, 12, 1, 2, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1720 Mevu Lane', 0, 1, 27, 17, 12, 2, 1, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('229 Peso Pike', 0, 1, 25, 4, 12, 5, 3, 2);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1523 Fuef Square', 0, 1, 16, 9, 9, 4, 1, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1305 Piuga Grove', 0, 0, 23, 16, 7, 4, 3, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1427 Demdi Glen', 0, 0, 15, 14, 13, 5, 3, 3);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('570 Zife Manor', 0, 1, 20, 7, 10, 1, 2, 1);
INSERT INTO report (title, is_pedag_vetted, is_company_vetted, id_student, id_company, id_pedag_tutor, id_company_tutor, id_conf_level, id_instructions) VALUES ('1613 Ovjig Pass', 1, 0, 18, 6, 12, 3, 2, 2);

INSERT INTO keyword (word) VALUES ('JEE');
INSERT INTO keyword (word) VALUES ('Bank');
INSERT INTO keyword (word) VALUES ('Oracle');
INSERT INTO keyword (word) VALUES ('SSII');
INSERT INTO keyword (word) VALUES ('ESN');
INSERT INTO keyword (word) VALUES ('Master');
INSERT INTO keyword (word) VALUES ('Java');
INSERT INTO keyword (word) VALUES ('C#');
INSERT INTO keyword (word) VALUES ('AWS');
INSERT INTO keyword (word) VALUES ('Cloud');
INSERT INTO keyword (word) VALUES ('SI');
INSERT INTO keyword (word) VALUES ('Systèmes d’information');
INSERT INTO keyword (word) VALUES ('Big Data');

INSERT INTO has (id_report, id_keyword) VALUES (21, 3);
INSERT INTO has (id_report, id_keyword) VALUES (15, 11);
INSERT INTO has (id_report, id_keyword) VALUES (28, 8);
INSERT INTO has (id_report, id_keyword) VALUES (2, 2);
INSERT INTO has (id_report, id_keyword) VALUES (13, 3);
INSERT INTO has (id_report, id_keyword) VALUES (10, 8);
INSERT INTO has (id_report, id_keyword) VALUES (5, 12);
INSERT INTO has (id_report, id_keyword) VALUES (8, 2);
INSERT INTO has (id_report, id_keyword) VALUES (23, 4);
INSERT INTO has (id_report, id_keyword) VALUES (4, 12);
INSERT INTO has (id_report, id_keyword) VALUES (2, 4);
INSERT INTO has (id_report, id_keyword) VALUES (10, 13);
INSERT INTO has (id_report, id_keyword) VALUES (1, 1);
INSERT INTO has (id_report, id_keyword) VALUES (10, 10);
INSERT INTO has (id_report, id_keyword) VALUES (4, 3);
INSERT INTO has (id_report, id_keyword) VALUES (8, 3);
INSERT INTO has (id_report, id_keyword) VALUES (12, 5);
INSERT INTO has (id_report, id_keyword) VALUES (8, 4);
INSERT INTO has (id_report, id_keyword) VALUES (19, 12);
INSERT INTO has (id_report, id_keyword) VALUES (22, 6);
INSERT INTO has (id_report, id_keyword) VALUES (7, 5);
INSERT INTO has (id_report, id_keyword) VALUES (14, 11);
INSERT INTO has (id_report, id_keyword) VALUES (11, 5);
INSERT INTO has (id_report, id_keyword) VALUES (26, 9);
INSERT INTO has (id_report, id_keyword) VALUES (13, 8);
INSERT INTO has (id_report, id_keyword) VALUES (21, 7);
INSERT INTO has (id_report, id_keyword) VALUES (11, 6);
INSERT INTO has (id_report, id_keyword) VALUES (2, 9);
INSERT INTO has (id_report, id_keyword) VALUES (13, 12);
INSERT INTO has (id_report, id_keyword) VALUES (20, 4);
INSERT INTO has (id_report, id_keyword) VALUES (24, 13);
INSERT INTO has (id_report, id_keyword) VALUES (8, 10);
INSERT INTO has (id_report, id_keyword) VALUES (10, 4);
INSERT INTO has (id_report, id_keyword) VALUES (7, 2);
INSERT INTO has (id_report, id_keyword) VALUES (5, 8);
INSERT INTO has (id_report, id_keyword) VALUES (10, 11);
INSERT INTO has (id_report, id_keyword) VALUES (3, 8);
INSERT INTO has (id_report, id_keyword) VALUES (22, 9);
INSERT INTO has (id_report, id_keyword) VALUES (25, 3);
INSERT INTO has (id_report, id_keyword) VALUES (9, 8);
INSERT INTO has (id_report, id_keyword) VALUES (20, 5);
INSERT INTO has (id_report, id_keyword) VALUES (28, 7);
INSERT INTO has (id_report, id_keyword) VALUES (11, 4);
INSERT INTO has (id_report, id_keyword) VALUES (21, 4);
INSERT INTO has (id_report, id_keyword) VALUES (12, 8);
INSERT INTO has (id_report, id_keyword) VALUES (13, 10);
INSERT INTO has (id_report, id_keyword) VALUES (27, 12);
INSERT INTO has (id_report, id_keyword) VALUES (7, 6);
INSERT INTO has (id_report, id_keyword) VALUES (9, 5);
INSERT INTO has (id_report, id_keyword) VALUES (1, 2);
INSERT INTO has (id_report, id_keyword) VALUES (5, 5);
INSERT INTO has (id_report, id_keyword) VALUES (27, 9);
INSERT INTO has (id_report, id_keyword) VALUES (15, 3);
INSERT INTO has (id_report, id_keyword) VALUES (10, 2);
INSERT INTO has (id_report, id_keyword) VALUES (14, 3);
INSERT INTO has (id_report, id_keyword) VALUES (13, 2);
INSERT INTO has (id_report, id_keyword) VALUES (2, 6);
INSERT INTO has (id_report, id_keyword) VALUES (21, 10);
INSERT INTO has (id_report, id_keyword) VALUES (23, 5);

CREATE OR REPLACE FUNCTION is_allowed
(p_id_user NUMBER, p_id_report NUMBER, p_conf_level NUMBER)
RETURN NUMBER
AS
    return_val NUMBER;
BEGIN
    DECLARE
        chk_prms NUMBER;
        conf NUMBER;
        us_my NUMBER;
        state NUMBER;
        is_part NUMBER;

        no_record_found EXCEPTION;
        confidentiality_prohibits EXCEPTION;
        report_not_validated EXCEPTION;
        not_my_user EXCEPTION;
    BEGIN
        SELECT count(id)
            INTO chk_prms 
            FROM report
            WHERE id = p_id_report;
        SELECT count(id) + chk_prms
            INTO chk_prms 
            FROM user_t
            WHERE id = p_id_user;
        IF chk_prms <> 2 THEN
            RAISE no_record_found;
        END IF;

        SELECT id_conf_level
            INTO conf 
            FROM report
            WHERE id = p_id_report;

        IF conf > p_conf_level THEN
            RAISE confidentiality_prohibits;
        END IF;

        SELECT is_my_user 
            INTO us_my 
            FROM user_t 
            WHERE id = p_id_user;
        SELECT is_company_vetted + is_pedag_vetted
            INTO state
            FROM report 
            WHERE id = p_id_report;
        SELECT count(id) 
            INTO is_part 
            FROM report 
            WHERE id = p_id_report
                AND (id_student = p_id_user 
                OR id_pedag_tutor = p_id_user 
                OR id_company_tutor = p_id_user);
                
        IF state < 2 AND is_part < 1 THEN
            RAISE report_not_validated;
        ELSIF us_my = 0 AND is_part < 1 THEN
            RAISE not_my_user;
        ELSE
            return_val := 1;
        END IF;
    EXCEPTION
        WHEN no_record_found THEN
            RAISE_APPLICATION_ERROR(-20010, 'No matching records were found for either the provided report id or student id, or both.');
            RETURN -1;
        WHEN confidentiality_prohibits THEN
            RAISE_APPLICATION_ERROR(-20011, 'Confidentiality settings disable this action.');
            RETURN -1;
        WHEN report_not_validated THEN
            RAISE_APPLICATION_ERROR(-20012, 'The report has not been validated, action aborted.');
            RETURN -1;
        WHEN not_my_user THEN
            RAISE_APPLICATION_ERROR(-20013, 'User must be a user of My Efrei.');
            RETURN -1;
    END;

RETURN return_val;

END is_allowed;
/

CREATE OR REPLACE FUNCTION get_report_by_keyword
(p_keyword VARCHAR2)
RETURN SYS_REFCURSOR
AS
    PRAGMA AUTONOMOUS_TRANSACTION;
    report_keyword SYS_REFCURSOR;
    id_word INT;
    nb_audit INT;
BEGIN
    SELECT id 
        INTO id_word 
        FROM keyword 
        WHERE word = p_keyword;

    OPEN report_keyword FOR 
        SELECT r.id AS id, r.title AS title 
            FROM has h, report r 
            WHERE h.id_keyword = id_word 
            AND h.id_report = r.id 
            ORDER BY r.title;

    UPDATE audit_keyword 
        SET nb_research = nb_research + 1 
        WHERE id_keyword = id_word;
    COMMIT;
    RETURN report_keyword;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            RAISE_APPLICATION_ERROR(-20004, 'Keyword not found');
            RETURN NULL;  
END get_report_by_keyword;
/

CREATE OR REPLACE FUNCTION get_most_wanted_reports
(p_top NUMBER)
RETURN SYS_REFCURSOR
AS
    most_wanted_keyword SYS_REFCURSOR;
BEGIN
    OPEN most_wanted_keyword
        FOR SELECT * FROM (
                SELECT k.id AS id, k.word AS title, a.nb_research 
                    FROM keyword k, audit_keyword a 
                    WHERE k.id = a.id_keyword 
                    ORDER BY a.nb_research DESC)
            WHERE ROWNUM <= p_top;     
    RETURN most_wanted_keyword;
END get_most_wanted_reports;
/

-- test get report by keyword
SET SERVEROUTPUT ON SIZE 1000000
DECLARE
  l_cursor SYS_REFCURSOR;
  l_id NUMBER;
  l_title VARCHAR2(64);
BEGIN
  l_cursor := get_report_by_keyword('JEE');
            
  LOOP
    FETCH l_cursor
    INTO  l_id, l_title;
    EXIT WHEN l_cursor%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(l_id || ' | ' || l_title);
  END LOOP;
  CLOSE l_cursor;
END;
/

-- test get most wanted reports
SET SERVEROUTPUT ON SIZE 1000000
DECLARE
  l_cursor_MW SYS_REFCURSOR;
  l_id_MW NUMBER;
  l_title_MW VARCHAR2(64);
  l_nb NUMBER;
BEGIN
  l_cursor_MW := get_most_wanted_reports(5);
            
  LOOP 
    FETCH l_cursor_MW
    INTO  l_id_MW, l_title_MW, l_nb;
    EXIT WHEN l_cursor_MW%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('id keyword : '|| l_id_MW || ' | ' || 'word : ' || l_title_MW || ' | ' || 'nb search : '|| l_nb);
  END LOOP;
  CLOSE l_cursor_MW;
END;
/
